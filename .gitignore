def HamEncoding(message):
    m = len(message)
    k = 1
    while 2**k < m + k + 1:
        k += 1

    encoded_message = ['0'] * (m + k)
    j = 0
    for i in range(1, m + k + 1):
        if i == 2**j:
            encoded_message[i - 1] = '0'
            j += 1
        else:
            encoded_message[i - 1] = message.pop(0)

    for j in range(k):
        par = 0
        for i in range(1, m + k + 1):
            if (i >> j) & 1:
                par ^= int(encoded_message[i - 1])
        encoded_message[2**j - 1] = str(par)

    return ''.join(encoded_message)

def HamDecoding(rcv, k):
    m = len(rcv) - k
    decoded_message = list(rcv)
    error_position = 0

    for j in range(k):
        parity = 0
        for i in range(1, len(decoded_message) + 1):
            if (i >> j) & 1:
                parity ^= int(decoded_message[i - 1])
        if parity != 0:
            error_position += 2**j

    if error_position != 0:
        corrected_bit = decoded_message[error_position - 1]
        corrected_bit = '0' if corrected_bit == '1' else '1'
        decoded_message[error_position - 1] = corrected_bit
        
    decoded_message = ''.join(decoded_message)

    if error_position == 0:
        return 'No error'
    else:
        return f'Error at Position {error_position}, and correct data: {decoded_message}'

# Example usage
org_sig1 = '1101'  # original binary data
encoded_msg1 = HamEncoding(list(org_sig1))
print(encoded_msg1)

org_sig2 = '1001011'  # original binary data
encoded_msg2 = HamEncoding(list(org_sig2))
print(encoded_msg2)

received_sig1 = '1010101'  # if receiving the data without error
k1 = 3
result1 = HamDecoding(received_sig1, k1)
print(result1)

received_sig2 = '1010001'  # if receiving the data with 1-bit error at Position 5
k2 = 3
result2 = HamDecoding(received_sig2, k2)
print(result2)

received_sig3 = '10110010011'  # if receiving the data with 1-bit error at Position 5
k3 = 4
result3 = HamDecoding(received_sig3, k3)
print(result3)

received_sig4 = '10110000011'  # if receiving the data with 1-bit error at Position 5
k4 = 4
result4 = HamDecoding(received_sig4, k3)
print(result4)
